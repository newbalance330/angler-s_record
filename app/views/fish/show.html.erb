
<%= render 'users/info', user: @user %>

<h1>Fish#show</h1>
 <table class="table cart_products">
   <%= attachment_image_tag @fish, :image, :fill, 550, 600, format: "jpeg" %>
        <tr>
          <th>商品</th>
          <td><%= @fish.fish_name %></td>
        </tr>
        <tr>
          <th>商品説明</th>
          <td><%= @fish.lure %></td>
        </tr>
        <tr>
          <th>商品説明</th>
          <td><%= @fish.body %></td>
        </tr>
        <tr>
          <th>ポイント</th>
          <td><%= @fish.address %></td>
        </tr>
      </table>

<% if @fish.user == current_user %>

    <%= link_to edit_fish_path(@fish.id) do %>
        <button type="button" class="btn btn-success"> 編集する </button>
    <% end %>
    <%= link_to fish_path(@fish.id), method: :delete, "data-confirm"  => "本当に削除しますか？"  do %>
        <button type="button" class="btn btn-success"> 削除する </button>
    <% end %>
<% end %>

<% if @fish.fish_favorited_by?(current_user) %>
    <p>
      <%= link_to fish_fish_favorites_path(@fish), method: :delete do %>
       ♥<%= @fish.fish_favorites.count %> いいね
      <% end %>
    </p>
    <% else %>
    <p>
      <%= link_to fish_fish_favorites_path(@fish), method: :post do %>
       ♡<%= @fish.fish_favorites.count %> いいね
      <% end %>
        </p>
<% end %>

<div>
    <p>コメント件数：<%= @fish.fish_comments.count %></p>
    <% @fish.fish_comments.each do |fish_comment| %>
      <p><%#= image_tag('sample-author1.jpg') %></p>
      <%= fish_comment.user.name %>
      <%= fish_comment.created_at.strftime('%Y/%m/%d') %><%= fish_comment.comment %>
      <% if fish_comment.user == current_user %>
        <div>
          <%= link_to "削除", fish_fish_comment_path(fish_comment.fish, fish_comment), method: :delete %>
        </div>
      <% end %>



    <% end %>
    </div>
    <div>
    <%= form_with(model:[@fish, @fish_comment], local: true) do |f| %>
      <%= f.text_area :comment, rows:'3',placeholder: "コメントをここに" %>
      <%= f.submit "送信する" %>
    <% end %>
</div>

<div class="card-list-container-fluid py-5">
   <div class="card w-50 mx-auto  mt-4 shadow-lg">
     <%= link_to fish_path(@fish.id) do %>
       <%= attachment_image_tag @fish, :image, class:"card-img-top "; %>
     <% end %>
     <div class="card-body">
       <div class="row">
         <div class="col-2">
           <%= attachment_image_tag @fish.user, :profile_image, :fill, 50, 50, fallback: "img/no_image.jpg", class:"mt-3 rounded-circle" %>
         </div>
         <div class="col-10">
           <p class="card-title">
             <%= link_to(fish_path(@fish.id), class:"text-dark") do %>
               <strong><i class="far fa-flag"></i><span> <%= @fish.fish_name %></span></strong>
             <% end %>
           </p>
           <p class="card-text">Lure：<%= @fish.lure %></p>
           <span><i class="fas fa-user"></i> By <%= @fish.user.name %> ｜ </span>
           <span><%= link_to "#{@fish.fish_comments.count} コメント", fish_path(@fish.id), class:"text-dark" %></span>
         </div>
       </div>
     </div>
   </div>
</div>


<h2>gmap</h2>
<!-- form_withはデフォルトでremote: trueの挙動になります -->
<div class="map_wrapper">
  <div id="map" class="gmap"></div>
</div>

<style>
#map{
  height: 600px;
}
</style>

<script>
 let mapInstance
 let geocoder
  // 変数を追加
 let marker

 function initMap() {
   geocoder = new google.maps.Geocoder()

    // 変数の名前をmapInstanceに変更、デフォルト位置を東京に変更
   mapInstance = new google.maps.Map(document.getElementById('map'), {
    center: {
      lat: 35.681,
      lng: 139.767
    },
    zoom: 8
 });
 
 // 保存された地図情報からピンをさす
    <%# @fish.each do |map| %>
    // google.maps.LatLngインスタンスを生成
    pos = new google.maps.LatLng(
    <%=@fish.latitude%>, //latitude
    <%=@fish.longitude%> //longitude
    );
    default_marker = new google.maps.Marker({
    map: mapInstance,
    position: pos,
    icon: {
    url: ' https://maps.google.com/mapfiles/ms/icons/green-dot.png', //アイコンのURL
    scaledSize: new google.maps.Size(40, 40) //サイズ
    }
    });
    <%# end %>
  }
 
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initMap" async defer></script>
