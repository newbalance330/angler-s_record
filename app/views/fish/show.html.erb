
<div class="post-detail py-5 bg-light">
  <div class="card w-75 mx-auto mt-4 shadow-lg">
    <%= attachment_image_tag @fish, :image, class:"card-img-top"; %>
    <div class="card-body">
      <div class="row">
        <div class="col-2">
          <%= link_to user_path(@user.id) do %>
           <%= attachment_image_tag @fish.user, :profile_image, :fill, 60, 60, format: 'jpeg', fallback: "no_image.jpg", size:"150x150", class:"mt-3 rounded-circle"; %>
          <% end %>
        </div>
        <div class="col-10">
          <p class="card-title"><strong><i class="fas fa-fish"></i>：<span> <%= @fish.fish_name %></span></strong></p>
          <p class="card-title "><i class="fas fa-drumstick-bite"></i>：<%= @fish.lure %></p>
          <p class="card-title "><i class="fas fa-comment-dots"></i>：<%= @fish.body %></p>
          <p class="card-title "><i class="fas fa-anchor"></i>：<%= @fish.address %></p>
          <%= link_to user_path(@user.id) do %>
            <span><i class="fas fa-user-circle"></i> by <%= @fish.user.name %></span>
          <% end %>
          <span> ｜ <i class="fa fa-calendar"></i> <%= @fish.created_at.strftime('%Y/%m/%d') %> ｜ </span>
          <span><i class="fa fa-comment"></i> <%= link_to "#{@fish.fish_comments.count}", fish_path(@fish.id), class:"text-dark" %> ｜ </span>
          <span id="favorite_btn_<%= @fish.id %>">
            <%= render "fish_favorites/favorite", fish: @fish %>
          </span>
          <% if @fish.user == current_user %>
            <%= link_to edit_fish_path(@fish.id) do %>
              <button type="button" class="btn btn-warning"> 編集する </button>
            <% end %>
            <%= link_to fish_path(@fish.id), method: :delete, "data-confirm"  => "本当に投稿を削除しますか？"  do %>
              <button type="button" class="btn btn-danger"> 削除する </button>
            <% end %>
          <% end %>
          <div>
            <% @fish.fish_comments.each do |fish_comment| %>
              <hr>
              <%= link_to user_path(@user.id) do %>
               <%= fish_comment.user.name %>
              <% end %>
              <%= fish_comment.created_at.strftime('%Y/%m/%d') %>  /  <i class="fa fa-comment"></i>  :  <%= fish_comment.comment %>
              <% if fish_comment.user == current_user %>
                <div>
                  <%= link_to "コメント削除", fish_fish_comment_path(fish_comment.fish, fish_comment), method: :delete %>
                </div>
              <% end %>
            <% end %>
          </div>
          <div>
            <%= form_with(model:[@fish, @fish_comment], local: true) do |f| %>
              <%= f.text_area :comment, rows:'2',placeholder: "コメントをここに" %>
              <%= f.submit "送信する" %>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<h2 class="point">釣れたポイント</h2>
<!-- form_withはデフォルトでremote: trueの挙動になります -->
<div class="map_wrapper">
  <div id="map" class="gmap"></div>
</div>

<style>
#map{
  height: 600px;
}
</style>

<script>


 function initMap() {
   let mapInstance
   let geocoder
    // 変数を追加
   let marker
   geocoder = new google.maps.Geocoder()

    // 変数の名前をmapInstanceに変更、デフォルト位置を東京に変更
   mapInstance = new google.maps.Map(document.getElementById('map'), {
    center: {
      lat: <%=@fish.latitude%>,
      lng: <%=@fish.longitude%>
    },
    zoom: 10
 });

 // 保存された地図情報からピンをさす
    // google.maps.LatLngインスタンスを生成
    pos = new google.maps.LatLng(
    <%=@fish.latitude%>, //latitude
    <%=@fish.longitude%> //longitude
    );
    default_marker = new google.maps.Marker({
    map: mapInstance,
    position: pos,
    icon: {
    url: 'https://maps.google.com/mapfiles/kml/paddle/red-stars.png', //アイコンのURL
    scaledSize: new google.maps.Size(45, 40) //サイズ
    }
    });



  }

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initMap" async defer></script>
